#!/bin/bash

# This script attempts to pre-configure emulationstation to roughly conform to XDG specifications.
#
# How:
# 1. This script takes and passes through all arguments given to it. 
#    It behaves like an invisible proxy for the real executable that applies a bit of preconfiguration.
# 
# 2. The call to the real executable will always be run with '--home homepath' to get more control over the path.
#    If '--home homedir' is not given as argument to this script, it will be set to default /home/user.
#    ES automatically assumes and creates a directory named '.emulationstation' under homedir.
#    The homedir given to ES is also used for ~ expansion in es_systems.cfg. If it was located under XDG_CONFIG_HOME, 
#    any path in es_systems.cfg using ~ would be resolved relative to XDG_CONFIG_HOME, which is not desirable and not
#    the correct location for Roms. Thus, the default home must remain, but the subdir .emulationstation will instead
#    by created as a link to XDG_CONFIG_HOME/emulationstation.     
#
# 3. ES knows and uses several additional paths/folders for music, themes etc which are normally all resolved relative to homedir
#    or, when compiled with BATOCERA switch, hardcoded to certain subdirectories of /userdata. 
#    The none-BATOCERA lookup works like following:
#    a) First a file named "emulationstation.ini" is searched for in 3 places and in the order given:
#       - In the same directory as the executable
#       - In homedir/.emulationstation
#       - In homedir/.emulationstation/..
#    b) The first directory found this way is taken as base for relative paths to other resource dirs.
#       Any such path that resolves to an existing directory is taken.
#    c) The emulationstation.ini found during a) is parsed as property file. Almost all system and user-specific resource dirs
#       can be overridden here by adding the correct property.   
#
# 4. This script will now generate a customized path config file at homedir/.emulationstation/emulationstation.ini.
#    With this, the paths detected during step 3.b) are manually corrected after dynamic lookup.
#    This is required because emulationstation resolves all directories relative to emulationstation.ini in a broken way:
#    It uses parentDirOf(emulationstation.ini)/../folderName for various resource folders, which is 
#    illogical/wrong in almost all cases. 
#
#    Broken examples of folder autodetect:
#    a) /opt/batocera-emulationstation/emulationstation + /opt/batocera-emulationstation/emulationstation.ini 
#       expects folders named {log,music,saves,themes,decorations,shaders} and some more in either
#       - homedir/foldername (for user overrides to system resources) 
#         (note: NOT in .emulationstation subdir, it deliberately goes up one directory from there) OR
#       - /opt/batocera-emulationstation/../foldername
#       - /opt/batocera-emulationstation/../system/foldername
#    b) /home/user/.emulationstation/emulationstation.ini
#       expects folders named {log,music,saves,themes,decorations,shaders} and some more in either
#       - /home/user/.emulationstation/foldername
#       - /home/user/system/foldername
#       - /home/user/foldername
#       ... which is a very impolite pollution of the user's home directory
#
# 5. This script generates the file emulationstation.ini only if it does not exist. This is done to allow user modifications if desired,
#    although nothing can then be done about misconfigurations. That's the users responsibility.
#
# Apart from the ini file and (optional) home adjustment, all arguments are passed to the real emulationstation binary as given to this script.
#
# Please note that this script only works correctly under the assumption that there is no 'default' emulationstation.ini
# directly next to the binary in /opt/batocera-emulationstation because ES checks this location first.
# As it is a property file, paths containing ~ are possible, but no variables are expanded. Thus, no XDG env var would work here.
# And changing the system-owned read-only property file whenever a user starts ES is a bad idea.

# Resolve script location first. 
# Allows to run it also from a not-yet installed package target dir
scriptLoc=$(dirname $(realpath -s "$0"))
FS_ROOT=$(realpath "$scriptLoc/../..")

for (( i=1; i <= "$#"; i++ )); do
  if [ "--home" = "${!i}" ]; then
    let idx=$i+1
    ES_HOME="${!idx}"
    ES_HOME=$(realpath -s "$esHome")
    echo "using $ES_HOME as home for emulationstation"
  fi

  if [ "--romdir" = "${!i}" ]; then
    let idx=$i+1
    ROMS_ROOT_DIR="${!idx}"
    ROMS_ROOT_DIR=$(realpath -s "$romDir")
    #remove romdir from argline
    set -- "${@:1:i-1}" "${@:idx+1}"
    #re-evaluate the same index again because of the now-left-shifted next argument
    let i=$i-1
  fi
done
if [ -z "$ES_HOME" ]; then
  echo "no --home given, use default"
fi

source "$FS_ROOT"/opt/batocera-emulationstation/common-paths.lib
echo "found home for ES: $ES_HOME"
echo "root dir of roms is: $ROMS_ROOT_DIR"
ES_USER_DIR="$ES_HOME/.emulationstation"

sysResourcesDir=$(realpath -s "$FS_ROOT/usr/share/batocera-emulationstation")

mkdir -p "$ES_DATA_DIR"/retroachievements/sounds \ 
  "$ES_DATA_DIR"/{saves,music,themes,inputmapping,decorations,shaders,videofilters}
# Re-generate link, as another argument for home might have been given.
# home effectively only controls, where the default ROMs directory shall be placed. 
# All other paths are configured below as subdirs of XDG_*_HOME paths accordingly.
[ -e "$ES_USER_DIR" ] && rm "$ES_USER_DIR"
if ! [ -e "$ES_USER_DIR" ]; then
  echo "re-create link from [$ES_USER_DIR] to [$ES_CONFIG_HOME]"
  ln -s -T "$ES_CONFIG_HOME" "$ES_USER_DIR"
elif [ -d "$ES_USER_DIR" ]; then
  #alternative none-destructive method would be folder mount/bind, but that would require sudo
  echo "$ES_USER_DIR is a directory. Will not link to XDG_CONFIG_HOME. This may lead to missing configuration files."
fi

if ! grep 'autocreate=false' "$ES_CONFIG_HOME/emulationstation.ini" 2>/dev/null; then
  echo "recreate config file at $ES_CONFIG_HOME/emulationstation.ini"
  echo "\
#change to false to prevent automatic recreation of file through startup script
autocreate=true
#!!when editing, make sure that no line ends with a blank space!!
#in fact, there should not be any spaces at all (unless they are part of the path itself)
#ES does NOT perform trimming, neither at the end, nor around the =
root=$ES_HOME
log=$ES_STATE_DIR
screenshots=$ES_DATA_DIR/screenshots
saves=$SAVES_ROOT_DIR
system.music=$sysResourcesDir/music
music=$ES_DATA_DIR/music
system.themes=$sysResourcesDir/themes
themes=$ES_DATA_DIR/themes
system.padtokey=$sysResourcesDir/inputmapping
padtokey=$ES_DATA_DIR/inputmapping
system.decorations=$sysResourcesDir/decorations
decorations=$ES_DATA_DIR/decorations
system.shaders=$sysResourcesDir/shaders
shaders=$ES_DATA_DIR/shaders
system.videofilters=$sysResourcesDir/videofilters
videofilters=$ES_DATA_DIR/videofilters
system.retroachievementsounds=$sysResourcesDir/retroachievements/sounds
retroachievementsounds=$ES_DATA_DIR/retroachievements/sounds
timezones=/usr/share/zoneinfo
" > "$ES_CONFIG_HOME/emulationstation.ini"
fi

packageDir=$(realpath -s "$FS_ROOT/opt/batocera-emulationstation")
"$packageDir"/btc-config configureRomPaths

exec "$packageDir"/bin/emulationstation --home "$ES_HOME" "$@"
