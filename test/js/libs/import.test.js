Object.assign(globalThis, require('test-helpers.mjs'));

const assert = require('node:assert/strict');
const { execSync } = require('node:child_process');

enableLogfile();

const TEST_RESOURCE_ROOT = ROOT_PATH + "/test/resource/fs_root";
const CONFIG_ROOT = TEST_RESOURCE_ROOT + "/configs";
const DROPIN_DIR = TEST_RESOURCE_ROOT + "/configs/dropins";
const BTC_BIN_DIR = TEST_RESOURCE_ROOT + "/btcDir/bin";
process.env.BTC_BIN_DIR = BTC_BIN_DIR;

//need import to get function defined on API into globalThis
const btc = require('btc-config');
const importer = require('config.libs/config-import.js');

function logDiff(file){ 
  LOGGER.error(
    `Unexpected diff in [${file}]:\n`,
    execSync(`git diff "${file}"`, {encoding:'utf8'}) || ' -> not under version control'
  ) 
}

class ImportTests {
  testGenerateConfig(){
    let options = {
      '-v': true,
      '--comment': 'Generated by test'
    }
    importer.generateGlobalConfig(options, CONFIG_ROOT, BTC_BIN_DIR, DROPIN_DIR);

    let changedFiles = execSync('git status --porcelain test/resource', {encoding:'utf8'}) || "";
    console.error("$: git status --porcelain test/resource:\n"+changedFiles)
    if(changedFiles.trim().length > 0){
      changedFiles = changedFiles
        .split('\n').filter(_ => _.trim().length > 0)
        .map(_ => _.substring(3));
      changedFiles.forEach(logDiff);
      assert.fail(`Generated config files don't match expected output (details in log):\n${changedFiles.join('\n')}`);
    }
  }
}

runTestClass(ImportTests);
